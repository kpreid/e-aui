# Copyright 2006 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")
pragma.enable("accumulator")

def <aui> := <import>[{def mqn := meta.context().getFQNPrefix().split("$")[0].split(".")
                       ".".rjoin(mqn(0, mqn.size() - 2)) + ".*"}]

def setupComponentReactor := <aui:swing.setupComponentReactor>

def presentEverReporter(reporter, context) {
  def hole := context.kit().x()
      
  def updateSel(new) :void {
    # XXX code copied from makeObjectSelector. should move into kit.
    hole.removeAll()
    hole."add(Component)"(context.subPresent(new, true))
    hole.revalidate()
    hole.repaint(hole.getVisibleRect()) # *sigh*, why is this necessary?
  }
  
  setupComponentReactor(hole, reporter, updateSel, null)
  return hole      
}
