# originally from Den; the version there catches exceptions and presents them in a dialog.

pragma.syntax("0.8")

def action {
  to run(component, code) :void {
    component.addActionListener(def actionListener {
      to actionPerformed(event) :void {
        try {
          code()
        } catch problem {
          throw <- (problem) # reach tracelog
        }
      }
    })
  }
}

? interp.waitAtTop(currentVat.morphInto("awt"))
? def action := <import:org.cubik.cle.aui.swing.action>
# value: <action>

? def button := <swing:makeJButton>("Foo"); null

#? def a := action(button, fn{ println("Foo") })
## value: <actionListener>

#? a.actionPerformed(null)
## stdout: Foo
##         

?# fixme: reenable the above and figure out some way to test the showExceptionDialog

